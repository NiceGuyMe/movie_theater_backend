openapi: 3.0.3
info:
  title: movie theater
  version: 1.0.11
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: movie
  - name: screening
  - name: auditorium
  - name: seat
  - name: seat_reserved
  - name: reservation
  - name: employee
  - name: reservation_type
paths:
  /movie:
    put:
      tags:
        - movie
      summary: Update an existing movie
      description: Update an existing pet by Id
      operationId: updateMovie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '400':
          description: Invalid ID supplied
        '404':
          description: Movie not found
        '405':
          description: Validation exception
    post:
      tags:
        - movie
      summary: Add a new movie
      description: Add a new movie
      operationId: addMovie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '405':
          description: Invalid input
    get:
      tags:
        - movie
      summary: show all movie
      operationId: showAllMovie
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
        '400':
          description: Invalid status value
  /movie/findByTitle:
    get:
      tags:
        - movie
      summary: Finds movie by title
      operationId: findMovieByTitle
      parameters:
        - name: title
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
        '400':
          description: Invalid status value
  /movie/{movieId}:
    get:
      tags:
        - movie
      summary: Find movie by ID
      operationId: getMovieById
      parameters:
        - name: movieId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    delete:
      tags:
        - movie
      summary: Deletes a movie
      operationId: deleteMovie
      parameters:
        - name: movieId
          in: path
          description: Movie id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid id
  /screening:
    put:
      tags:
        - screening
      summary: Update an existing screening
      description: Update an existing screening
      operationId: updateScreening
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Screening'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screening'
        '400':
          description: Invalid ID supplied
        '404':
          description: Screening not found
        '405':
          description: Validation exception
    post:
      tags:
        - screening
      summary: Add a new screening
      description: Add a new screening
      operationId: addScreening
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Screening'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screening'
        '405':
          description: Invalid input
    get:
      tags:
        - screening
      summary: show all screening
      operationId: showAllScreening
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Screening'
        '400':
          description: Invalid status value
  /screening/{screeningId}:
    get:
      tags:
        - screening
      summary: Find screening by ID
      operationId: getScreeningById
      parameters:
        - name: screeningId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screening'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    delete:
      tags:
        - screening
      summary: Deletes a screening
      operationId: deleteScreening
      parameters:
        - name: screeningId
          in: path
          description: screening id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid id
  /auditorium:
    put:
      tags:
        - auditorium
      summary: Update an existing auditorium
      description: Update an existing auditorium
      operationId: updateAuditorium
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auditorium'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auditorium'
        '400':
          description: Invalid ID supplied
        '404':
          description: Screening not found
        '405':
          description: Validation exception
    post:
      tags:
        - auditorium
      summary: Add a new auditorium
      description: Add a new auditorium
      operationId: addAuditorium
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auditorium'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auditorium'
        '405':
          description: Invalid input
    get:
      tags:
        - auditorium
      summary: show all auditorium
      operationId: showAllAuditorium
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Auditorium'
        '400':
          description: Invalid status value
  /auditorium/{auditoriumId}:
    get:
      tags:
        - auditorium
      summary: Find auditorium by ID
      operationId: getauditoriumById
      parameters:
        - name: auditoriumId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auditorium'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    delete:
      tags:
        - auditorium
      summary: Deletes a auditorium
      operationId: deleteAuditorium
      parameters:
        - name: auditoriumId
          in: path
          description: screening id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid id
  /seat:
    put:
      tags:
        - seat
      summary: Update an existing seat
      description: Update an existing seat
      operationId: updateSeat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seat'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seat'
        '400':
          description: Invalid ID supplied
        '404':
          description: Screening not found
        '405':
          description: Validation exception
    post:
      tags:
        - seat
      summary: Add a new seat
      description: Add a new seat
      operationId: addSeat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seat'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seat'
        '405':
          description: Invalid input
    get:
      tags:
        - seat
      summary: show all seat
      operationId: showAllSeat
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Seat'
        '400':
          description: Invalid status value
  /seat/{seatId}:
    get:
      tags:
        - seat
      summary: Find auditorium by ID
      operationId: getSeatById
      parameters:
        - name: seatId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auditorium'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    delete:
      tags:
        - seat
      summary: Deletes a seat
      operationId: deleteSeat
      parameters:
        - name: seatId
          in: path
          description: seat id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid id
  /seat_reserved:
    put:
      tags:
        - seat_reserved
      summary: Update an existing seat_reserved
      description: Update an existing seat_reserved
      operationId: updateSeat_reserved
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seat_reserved'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seat_reserved'
        '400':
          description: Invalid ID supplied
        '404':
          description: Screening not found
        '405':
          description: Validation exception
    post:
      tags:
        - seat_reserved
      summary: Add a new seat_reserved
      description: Add a new seat_reserved
      operationId: addSeat_reserved
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seat_reserved'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seat_reserved'
        '405':
          description: Invalid input
    get:
      tags:
        - seat_reserved
      summary: show all seat_reserved
      operationId: showAllSeat_reserved
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Seat_reserved'
        '400':
          description: Invalid status value
  /seat_reserved/{seat_reservedId}:
    get:
      tags:
        - seat_reserved
      summary: Find seat_reserved by ID
      operationId: getseat_reservedById
      parameters:
        - name: seat_reservedId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seat_reserved'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    delete:
      tags:
        - seat_reserved
      summary: Deletes a Seat_reserved
      operationId: seat_reservedId
      parameters:
        - name: seat_reservedId
          in: path
          description: seat id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid id
  /employee:
    put:
      tags:
        - employee
      summary: Update an existing employee
      description: Update an existing employee
      operationId: updateEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Screening not found
        '405':
          description: Validation exception
    post:
      tags:
        - employee
      summary: Add a new employee
      description: Add a new employee
      operationId: addEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '405':
          description: Invalid input
    get:
      tags:
        - employee
      summary: show all employee
      operationId: showAllEmployee
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid status value
  /employee/{employeeId}:
    get:
      tags:
        - employee
      summary: Find employee by ID
      operationId: getEmployeeById
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    delete:
      tags:
        - employee
      summary: Deletes a employee
      operationId: deleteEmployee
      parameters:
        - name: employeeId
          in: path
          description: employee id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid id
  /reservation_type:
    put:
      tags:
        - reservation_type
      summary: Update an existing reservation_type
      description: Update an existing reservation_type
      operationId: updateReservation_type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation_type'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation_type'
        '400':
          description: Invalid ID supplied
        '404':
          description: Screening not found
        '405':
          description: Validation exception
    post:
      tags:
        - reservation_type
      summary: Add a new reservation_type
      description: Add a new reservation_type
      operationId: addReservation_type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation_type'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation_type'
        '405':
          description: Invalid input
    get:
      tags:
        - reservation_type
      summary: show all reservation_type
      operationId: showAllReservation_type
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation_type'
        '400':
          description: Invalid status value
  /reservation_type/{reservation_typeId}:
    get:
      tags:
        - reservation_type
      summary: Find reservation_type by ID
      operationId: getreservation_typeId
      parameters:
        - name: reservation_typeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation_type'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    delete:
      tags:
        - reservation_type
      summary: Deletes a reservation_type
      operationId: deleteReservation_type
      parameters:
        - name: reservation_typeId
          in: path
          description: employee id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid id
  /reservation:
    put:
      tags:
        - reservation
      summary: Update an existing reservation
      description: Update an existing reservation
      operationId: updateReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '400':
          description: Invalid ID supplied
        '404':
          description: Screening not found
        '405':
          description: Validation exception
    post:
      tags:
        - reservation
      summary: Add a new reservation_type
      description: Add a new reservation
      operationId: addReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '405':
          description: Invalid input
    get:
      tags:
        - reservation
      summary: show all reservation
      operationId: showAllReservation
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
        '400':
          description: Invalid status value
  /reservation/{reservationId}:
    get:
      tags:
        - reservation
      summary: Find reservation_type by ID
      operationId: getreservationId
      parameters:
        - name: reservationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    delete:
      tags:
        - reservation
      summary: Deletes a reservation
      operationId: deleteReservation
      parameters:
        - name: reservationId
          in: path
          description: reservation id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid id
components:
  schemas:
    Movie:
      required:
        - title
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: Titanic
        director:
          type: string
          example: Robert
        cast:
          type: string
          example: Avana
        description:
          type: string
          example: alefij mzoej,zraoeif,,aeprjv,e
        duration_min:
          type: integer
          format: int64
          example: 120
    Screening:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        movie_title:
          type: string
          example: Titanic
        auditorium:
          type: string
          example: A
        duration_min:
          type: integer
          format: int64
          example: 120
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: loica
        password:
          type: string
          example: toky123
    Seat:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        row:
          type: integer
          format: int64
          example: 2
        number:
          type: integer
          format: int64
          example: 3
        auditorium:
          type: string
          example: A
    Seat_reserved:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        seat:
          type: integer
          format: int64
          example: 2
        reservation:
          type: integer
          format: int64
          example: 3
        screening:
          type: string
          example: A
    Reservation:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        screening:
          type: string
          example: A
        employee:
          type: string
          example: Loica
        reservation:
          type: string
          example: en ligne
        contact:
          type: string
          example: contact@gmail.com
        reserved:
          type: boolean
          example: true
        paid:
          type: boolean
          example: false
        active:
          type: boolean
          example: true
    Auditorium:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        auditorium_name:
          type: string
          example: A
    Reservation_type:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        type:
          type: string
          example: en ligne
